med = '''1. Присоединение к СПД по медной линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать медную линию связи от {} до клиента.
- Подключить организованную линию для клиента в коммутатор {}, задействовать свободный порт.'''

med_two = '''1. Присоединение к СПД по медной линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать 2 медных линии связи от {} до клиента.
- Подключить организованные линии для клиента в коммутатор {}, задействовать свободные порты.'''



vols = '''1. Присоединение к СПД по оптической линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать ВОЛС от {} до клиента по решению ОАТТР.
- Установить на стороне АВ конвертер 1310 нм, выставить на конвертере режим работы 100 FD Force.
- Подключить организованную линию для клиента в коммутатор {}, порт задействовать свободный.
- Установить на стороне клиента конвертер 1550 нм, выставить на конвертере режим работы 100 FD Force.

ОНИТС СПД проведение работ:
- На порту подключения клиента выставить скоростной режим Auto.'''

vols_two = '''1. Присоединение к СПД по оптической линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать ВОЛС от {} до клиента по решению ОАТТР.
- Установить на стороне АВ 2 конвертера 1310 нм, выставить на конвертерах режим работы 100 FD Force.
- Подключить организованные линии для клиента в коммутатор {}, порты задействовать свободные.
- Установить на стороне клиента 2 конвертера 1550 нм, выставить на конвертерах режим работы 100 FD Force.

ОНИТС СПД проведение работ:
- На портах подключения клиента выставить скоростной режим Auto.'''


vols_idle = '''1. Присоединение к СПД по оптической линии связи с простоем связи услуг.
------------------------------------------------------------------------------------------

ОИПМ подготовиться к работам:
- Требуется отключение согласно ППР {ppr_idle} согласовать проведение работ.

ОИПМ проведение работ:
- Организовать ВОЛС от {pps_idle} до клиента по решению ОАТТР.
- Совместно с ОНИТС СПД убедиться в восстановлении связи согласно ППР {ppr_idle}.
- Установить на стороне АВ конвертер 1310 нм, выставить на конвертере режим работы 100 FD Force.
- Подключить организованную линию для клиента в коммутатор {kad_idle}, порт задействовать свободный.
- Установить на стороне клиента конвертер 1550 нм, выставить на конвертере режим работы 100 FD Force.


ОНИТС СПД проведение работ:
- После проведения монтажных работ убедиться в восстановлении услуг согласно ППР {ppr_idle}.
- На порту подключения клиента выставить скоростной режим Auto.'''


vols_csw100 = '''1. Присоединение к СПД по оптической линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать ВОЛС от {} до клиента по решению ОАТТР.
- Установить на стороне АВ конвертер 1310 нм, выставить на конвертере режим работы 100 FD Force.
- Подключить организованную линию для клиента в коммутатор {}, порт задействовать свободный.
- Установить на стороне клиента передатчик SFP WDM, дальность до 20 км (14dB), 1550 нм.

ОНИТС СПД проведение работ:
- На порту подключения клиента выставить скоростной режим Auto.'''


vols_csw1g = '''1. Присоединение к СПД по оптической линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать ВОЛС от {} до клиента по решению ОАТТР.
- Установить на стороне АВ передатчик SFP WDM, дальность до 20 км (12dB), 1310 нм.
- Подключить организованную линию для клиента в коммутатор {}, порт задействовать свободный.
- Установить на стороне клиента передатчик SFP WDM, дальность до 20 км (14dB), 1550 нм.

ОНИТС СПД проведение работ:
- На порту подключения клиента выставить скоростной режим Auto.'''


CSW_100M_M = '''2. Установка клиентского коммутатора.
------------------------------------------------------------------------------------------

ОИПМ подготовиться к работам:
- Создать заявку в Cordis на ОНИТС СПД для настройки клиентского коммутатора.
- Логическое подключение для клиентского коммутатора - {}, {}.

ОИПМ проведение работ:
- Установить в помещении клиента коммутатор D-Link DGS-1100-06/ME. Включить линию для клиента в Port 5 коммутатора D-Link DGS-1100-06/ME.
- Совместно с ОНИТС СПД запустить клиентский коммутатор.


ОНИТС СПД подготовиться к работам:
- В рамках заявки в Cordis подготовиться к установке клиентского коммутатора D-Link DGS-1100-06/ME.

ОНИТС СПД проведение работ:
- Совместно с ОИПМ установить клиентский коммутатор.
- Передать информацию в ОУИ СПД.'''


CSW_100M_O = '''2. Установка клиентского коммутатора.
------------------------------------------------------------------------------------------

ОИПМ подготовиться к работам:
- Создать заявку в Cordis на ОНИТС СПД для настройки клиентского коммутатора.
- Логическое подключение для клиентского коммутатора - {}, {}.

ОИПМ проведение работ:
- Установить в помещении клиента коммутатор D-Link DGS-1100-06/ME. Включить линию для клиента в Port 6 коммутатора D-Link DGS-1100-06/ME.
- Совместно с ОНИТС СПД запустить клиентский коммутатор.


ОНИТС СПД подготовиться к работам:
- В рамках заявки в Cordis подготовиться к установке клиентского коммутатора D-Link DGS-1100-06/ME.

ОНИТС СПД проведение работ:
- Совместно с ОИПМ установить клиентский коммутатор.
- Передать информацию в ОУИ СПД.'''


CSW_1G = '''2. Установка клиентского коммутатора.
------------------------------------------------------------------------------------------

ВНИМАНИЕ!!!!!!!!!!!!!!!! ТРЕБУЕТСЯ УДАЛЕННАЯ НАСТРОЙКА КОММУТАТОРА D-Link DGS-1100-06/ME С ОНИТС СПД НА ЭТАПЕ ПОДГОТОВКИ К РАБОТАМ.

ОИПМ подготовиться к работам:
- Создать заявку в Cordis на ОНИТС СПД для настройки клиентского коммутатора.
- Логическое подключение для клиентского коммутатора - {}, {}.
- Совместно с ОНИТС СПД удаленно настроить коммутатор D-Link DGS-1100-06/ME.

ОИПМ проведение работ:
- Установить в помещении клиента коммутатор D-Link DGS-1100-06/ME. Включить линию для клиента в Port 6 коммутатора D-Link DGS-1100-06/ME.
- Совместно с ОНИТС СПД запустить клиентский коммутатор на магистрали 1G.


ОНИТС СПД подготовиться к работам:
- В рамках заявки в Cordis подготовиться к установке клиентского коммутатора D-Link DGS-1100-06/ME.

ОНИТС СПД проведение работ:
- Совместно с ОИПМ установить клиентский коммутатор.
- Передать информацию в ОУИ СПД.'''

csw_port_4 = '''3. Присоединение к клиентскому коммутатору по медной линии связи.
------------------------------------------------------------------------------------------

ОИПМ проведение работ:
- Организовать {} медных линии от клиентского коммутатора до оборудования, установленного у клиента. Включить линии в порты:
Port 1 - ШПД в интернет.
Port 2 - телефония.'''


infinet = '''1. Присоединение к СПД по беспроводной среде передачи данных.
------------------------------------------------------------------------------------------

ОИПМ подготовиться к работам:
- Создать заявку в Cordis на ОНИТС СПД для выделения реквизитов беспроводных точек доступа WDS/WDA.
- Доставить в офис ОНИТС СПД беспроводные точки Infinet H11 для их настройки.


ОИПМ проведение работ:
После выполнения подготовительных работ в рамках заявки в Cordis и настройки точек в офисе ОНИТС СПД:
- Установить на стороне {} и на стороне клиента беспроводные точки доступа по решению ОАТТР. На АВ использовать для подключения беспроводной точки коммутатор {}, свободные порты есть.

ОНИТС СПД подготовиться к работам:
- По заявке в Cordis выделить реквизиты для управления беспроводными точками.
- Настроить беспроводные точки Infinet H11 в офисе.

ОНИТС СПД проведение работ:
- Совместно с ОИПМ подключить к СПД и запустить беспроводные станции (WDS/WDA).'''


ubi = '''1. Присоединение к СПД по беспроводной среде передачи данных.
------------------------------------------------------------------------------------------

ОИПМ подготовиться к работам:
- Создать заявку в Cordis на ОНИТС СПД для выделения реквизитов беспроводных точек доступа WDS/WDA.

ОИПМ проведение работ:
После выполнения подготовительных работ в рамках заявки в Cordis на ОНИТС СПД:
- Установить на стороне {} и на стороне клиента беспроводные точки доступа по решению ОАТТР. На АВ использовать для подключения беспроводной точки коммутатор {}, свободные порты есть.

ОНИТС СПД подготовиться к работам:
- По заявке в Cordis выделить реквизиты для управления беспроводными точками.

ОНИТС СПД проведение работ:
- Совместно с ОИПМ подключить к СПД и запустить беспроводные станции WDS/WDA.'''


import nservices
serv = []
title_serv = []
kol = int(input('Количество услуг '))
for i in range(kol):
    usl, usl_tit = nservices.service()
    serv.append(usl)
    title_serv.append(usl_tit)


sreda = input('Среда передачи(UTP-1,Fiber-2,Wi-Fi-3):  ')
pps = input('ППС: ')
pps = pps.strip()
kad = input('КАД: ')
kad = kad.strip()
if pps.startswith('АВ '):
    pass
else:
    pps ='АВ '+pps
if pps.endswith(', АВ'):
    pps = pps[:pps.index(', АВ')]
else:
    pass

def env():
    cswyn = 'w'
    csw100yn = 'w'
    if int(kol) == 1:
        if sreda == '1':
            result = med.format(pps, kad)
            title = med[:med.index('-----')]

        elif sreda == '2':
            idle = input('idle(y/n):  ')
            if idle == 'n':
                result = vols.format(pps, kad)
                title = vols[:vols.index('-----')]
            elif idle == 'y':
                ppr = input('#ППР:  ')
                result = vols_idle.format(pps_idle=pps, kad_idle=kad, ppr_idle=ppr)
                title = vols_idle[:vols_idle.index('-----')]
        elif sreda == '3':
            wireless = input('AP ')
            if wireless == 'i':
                title = infinet[:infinet.index('-----')]
                result = infinet.format(pps, kad)
                title = 'Стоимость оборудования Infinet H11 посчитана как "Прочее активное оборудование"\n\n' + title
            elif wireless == 'u':
                title = ubi[:ubi.index('-----')]
                result = ubi.format(pps, kad)
                title = 'Стоимость оборудования Nanostation M5 посчитана как "Прочее активное оборудование"\n\n' + title
    else:
        quant = input('Количество линий от АВ ')
        if quant == '1':
            cswyn = input('Требуется ли CSW? ')

            if sreda == '1':
                result = med.format(pps, kad)
                title = med[:med.index('-----')]

            elif sreda == '2' and cswyn == 'n':
                idle = input('idle(y/n):  ')
                if idle == 'n':
                    result = vols.format(pps, kad)
                    title = vols[:vols.index('-----')]
                elif idle == 'y':
                    ppr = input('#ППР:  ')
                    result = vols_idle.format(pps_idle=pps, kad_idle=kad, ppr_idle=ppr)
                    title = vols_idle[:vols_idle.index('-----')]

            elif sreda == '2' and cswyn == 'y':
                csw100yn = input('Магистраль на 100М? ')
                if csw100yn == 'y':
                    result = vols_csw100.format(pps, kad)
                    title = vols_csw100[:vols_csw100.index('-----')]
                elif csw100yn == 'n':
                    result = vols_csw1g.format(pps, kad)
                    title = vols_csw1g[:vols_csw1g.index('-----')]
            elif sreda == '3':
                wireless = input('AP ')
                if wireless == 'i':
                    title = infinet[:infinet.index('-----')]
                    result = infinet.format(pps, kad)
                    title = 'Стоимость оборудования Infinet H11 посчитана как "Прочее активное оборудование"\n\n' + title
                elif wireless == 'u':
                    title = ubi[:ubi.index('-----')]
                    result = ubi.format(pps, kad)
                    title = 'Стоимость оборудования Nanostation M5 посчитана как "Прочее активное оборудование"\n\n' + title
        elif int(quant) == 2:
            if sreda == '1':
                result = med_two.format(pps, kad)
                title = med_two[:med_two.index('-----')]
            elif sreda == '2':
                result = vols_two.format(pps, kad)
                title = vols_two[:vols_two.index('-----')]
        else:
            pass
    csw_exist = 3
    csw_po = 0
    if cswyn == 'y':
        csw_po = input('Количество линий от CSW: ')
        if csw100yn == 'n':
            csw_exist = 2
        else:
            csw_exist = 1
    else:
        pass
    return result, title, csw_exist, csw_po

line, title_line, csw_exist, csw_po = env()

def csw():
    if csw_exist == 2 and sreda == '2':
        result = CSW_1G.format(pps, kad)
        title = CSW_1G[:CSW_1G.index('-----')]
    elif csw_exist == 1 and sreda == '2':
        result = CSW_100M_O.format(pps, kad)
        title = CSW_100M_O[:CSW_100M_O.index('-----')]
    elif csw_exist == 1 and sreda == '1' or '3':
        result = CSW_100M_M.format(pps, kad)
        title = CSW_100M_M[:CSW_100M_O.index('-----')]
    else:
        result = []
        title = []
    return result, title

def ports_csw(csw_exist, csw_po):
    if csw_exist == 1 or csw_exist == 2:
        result = csw_port_4.format(csw_po)
        title = csw_port_4[:csw_port_4.index('-----')]
    else:
        result = []
        title = []
    return result, title

csw, csw_title = csw()
csw_port_4, title_csw_port_4 = ports_csw(csw_exist, csw_po)

print('\n\n')
print(title_line, end='')
if csw_exist == 1 or csw_exist == 2:
    print(csw_title, end='')
    print(title_csw_port_4, end='')
else:
    pass
for i in title_serv:
    print(i, end='')
print('\n')
print(line)
if csw_exist == 1 or csw_exist == 2:
    print('\n')
    print(csw)
    print('\n')
    print(csw_port_4)
else:
    pass
print('\n')
for i in serv:
    print(i)
